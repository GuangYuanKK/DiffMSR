# general settings
name: your_experiment_name
model_type: DiffMSRS1Model
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0

gt_size: 256
# dataset and data loader settings
datasets:
  train:
    name: MCSR
    type: MCSRPairedDataset #PairedImageDataset
    dataroot_gt: mri_data_complex/mc_brain/train
    dataroot_lq: mri_data_complex/mc_brain/train
    dataroot_mask: "mri_data_complex/dc_mask.mat"
    io_backend:
      type: disk

    gt_size: 256
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 1
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  # Uncomment these for validation
  val_1:
    name: Brain
    type: MCSRPairedDataset #PairedImageDataset
    dataroot_gt: mri_data_complex/mc_brain/valid
    dataroot_lq: mri_data_complex/mc_brain/valid
    dataroot_mask: "mri_data_complex/dc_mask.mat"
    io_backend:
      type: disk

# network structures
network_g:
  type: DiffMSR_S1
  n_encoder_res: 9
  inp_channels: 2
  out_channels: 2
  dim: 32
  num_blocks: [6,6,6,6]
  num_refinement_blocks: 6
  heads: [4,4,4,4]
  ffn_expansion_factor: 2.2
  bias: False
  LayerNorm_type: BiasFree

# path
path:
  pretrain_network_g: ~
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999

  optim_g:
    type: Adam
    lr: !!float 1e-5
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [250000,400000, 450000, 475000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# Uncomment these for validation
# validation settings
val:
  window_size: 8
  val_freq: !!float 5e3
  save_img: Ture

  metrics:
    psnr: # metric name
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true
    ssim: # metric name
      type: calculate_ssim
      crop_border: 0
      test_y_channel: true

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500