# general settings
name: your_experiment_name
model_type: DiffMSRS2Model
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0



# dataset and data loader settings
datasets:
      
  test_1:
    name: Brain
    type: MCSRPairedDataset #PairedImageDataset
    dataroot_gt: mri_data_complex/mc_brain/valid
    dataroot_lq: mri_data_complex/mc_brain/valid
    dataroot_mask: "/mnt/e/CVPR2024/DiffIR-SRGAN/mri_data_complex/dc_mask.mat"
    filename_tmpl: '{}'
    io_backend:
      type: disk


# network structures
network_g:
  type: DiffMSR_S2
  n_encoder_res: 9
  inp_channels: 2
  out_channels: 2
  dim: 32
  num_blocks: [6,6,6,6]
  num_refinement_blocks: 6
  heads: [4,4,4,4]
  ffn_expansion_factor: 2.2
  bias: False
  LayerNorm_type: BiasFree
  n_denoise_res: 1
  linear_start: 0.1
  linear_end: 0.99
  timesteps: 4

# network structures
network_S1:
  type: DiffMSR_S1
  n_encoder_res: 9
  inp_channels: 2
  out_channels: 2
  dim: 32
  num_blocks: [6,6,6,6]
  num_refinement_blocks: 6
  heads: [4,4,4,4]
  ffn_expansion_factor: 2.2
  bias: False
  LayerNorm_type: BiasFree

# path
path:
  pretrain_network_S1: experiments/Stage_one/models/net_g_latest.pth
  pretrain_network_g:  experiments/Stage_two/models/net_g_latest.pth
  param_key_g: params_ema
  strict_load_g: False
  ignore_resume_networks: network_S1

train:
  ema_decay: 0.999

  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [250000,400000, 450000, 475000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  encoder_iter: 0
  lr_encoder: !!float 2e-4
  lr_sr: !!float 2e-4
  gamma_encoder: 0.1
  gamma_sr: 0.5
  lr_decay_encoder: 30000
  lr_decay_sr: 300000

val:
  window_size: 8
  save_img: True
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true
    ssim: # metric name
      type: calculate_ssim
      crop_border: 0
      test_y_channel: true
    




